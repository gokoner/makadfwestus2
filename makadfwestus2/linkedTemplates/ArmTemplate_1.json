{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "makadfwestus2"
		},
		"AzureSqlDatabase1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SQLDB1"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SQLDW"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output/parquet",
						"container": "mycontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLMovies",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "movie",
						"type": "int",
						"precision": 10
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "genres",
						"type": "nvarchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rating",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "RottenTomato",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Movies"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dupefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output/dupes",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/folderout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output/demoout1",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "loan.csv",
						"folderPath": "SampleData",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "member_id",
						"type": "String"
					},
					{
						"name": "loan_amnt",
						"type": "String"
					},
					{
						"name": "funded_amnt",
						"type": "String"
					},
					{
						"name": "funded_amnt_inv",
						"type": "String"
					},
					{
						"name": "term",
						"type": "String"
					},
					{
						"name": "int_rate",
						"type": "String"
					},
					{
						"name": "installment",
						"type": "String"
					},
					{
						"name": "grade",
						"type": "String"
					},
					{
						"name": "sub_grade",
						"type": "String"
					},
					{
						"name": "emp_title",
						"type": "String"
					},
					{
						"name": "emp_length",
						"type": "String"
					},
					{
						"name": "home_ownership",
						"type": "String"
					},
					{
						"name": "annual_inc",
						"type": "String"
					},
					{
						"name": "verification_status",
						"type": "String"
					},
					{
						"name": "issue_d",
						"type": "String"
					},
					{
						"name": "loan_status",
						"type": "String"
					},
					{
						"name": "pymnt_plan",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "desc",
						"type": "String"
					},
					{
						"name": "purpose",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "zip_code",
						"type": "String"
					},
					{
						"name": "addr_state",
						"type": "String"
					},
					{
						"name": "dti",
						"type": "String"
					},
					{
						"name": "delinq_2yrs",
						"type": "String"
					},
					{
						"name": "earliest_cr_line",
						"type": "String"
					},
					{
						"name": "inq_last_6mths",
						"type": "String"
					},
					{
						"name": "mths_since_last_delinq",
						"type": "String"
					},
					{
						"name": "mths_since_last_record",
						"type": "String"
					},
					{
						"name": "open_acc",
						"type": "String"
					},
					{
						"name": "pub_rec",
						"type": "String"
					},
					{
						"name": "revol_bal",
						"type": "String"
					},
					{
						"name": "revol_util",
						"type": "String"
					},
					{
						"name": "total_acc",
						"type": "String"
					},
					{
						"name": "initial_list_status",
						"type": "String"
					},
					{
						"name": "out_prncp",
						"type": "String"
					},
					{
						"name": "out_prncp_inv",
						"type": "String"
					},
					{
						"name": "total_pymnt",
						"type": "String"
					},
					{
						"name": "total_pymnt_inv",
						"type": "String"
					},
					{
						"name": "total_rec_prncp",
						"type": "String"
					},
					{
						"name": "total_rec_int",
						"type": "String"
					},
					{
						"name": "total_rec_late_fee",
						"type": "String"
					},
					{
						"name": "recoveries",
						"type": "String"
					},
					{
						"name": "collection_recovery_fee",
						"type": "String"
					},
					{
						"name": "last_pymnt_d",
						"type": "String"
					},
					{
						"name": "last_pymnt_amnt",
						"type": "String"
					},
					{
						"name": "next_pymnt_d",
						"type": "String"
					},
					{
						"name": "last_credit_pull_d",
						"type": "String"
					},
					{
						"name": "collections_12_mths_ex_med",
						"type": "String"
					},
					{
						"name": "mths_since_last_major_derog",
						"type": "String"
					},
					{
						"name": "policy_code",
						"type": "String"
					},
					{
						"name": "application_type",
						"type": "String"
					},
					{
						"name": "annual_inc_joint",
						"type": "String"
					},
					{
						"name": "dti_joint",
						"type": "String"
					},
					{
						"name": "verification_status_joint",
						"type": "String"
					},
					{
						"name": "acc_now_delinq",
						"type": "String"
					},
					{
						"name": "tot_coll_amt",
						"type": "String"
					},
					{
						"name": "tot_cur_bal",
						"type": "String"
					},
					{
						"name": "open_acc_6m",
						"type": "String"
					},
					{
						"name": "open_il_6m",
						"type": "String"
					},
					{
						"name": "open_il_12m",
						"type": "String"
					},
					{
						"name": "open_il_24m",
						"type": "String"
					},
					{
						"name": "mths_since_rcnt_il",
						"type": "String"
					},
					{
						"name": "total_bal_il",
						"type": "String"
					},
					{
						"name": "il_util",
						"type": "String"
					},
					{
						"name": "open_rv_12m",
						"type": "String"
					},
					{
						"name": "open_rv_24m",
						"type": "String"
					},
					{
						"name": "max_bal_bc",
						"type": "String"
					},
					{
						"name": "all_util",
						"type": "String"
					},
					{
						"name": "total_rev_hi_lim",
						"type": "String"
					},
					{
						"name": "inq_fi",
						"type": "String"
					},
					{
						"name": "total_cu_tl",
						"type": "String"
					},
					{
						"name": "inq_last_12m",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"folderPath": "SampleData",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "RottenTomato",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/names100')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "90 Records.csv",
						"folderPath": "SampleData/HR",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp ID",
						"type": "String"
					},
					{
						"name": "Name Prefix",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Middle Initial",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "E Mail",
						"type": "String"
					},
					{
						"name": "Father's Name",
						"type": "String"
					},
					{
						"name": "Mother's Name",
						"type": "String"
					},
					{
						"name": "Mother's Maiden Name",
						"type": "String"
					},
					{
						"name": "Date of Birth",
						"type": "String"
					},
					{
						"name": "Time of Birth",
						"type": "String"
					},
					{
						"name": "Age in Yrs.",
						"type": "String"
					},
					{
						"name": "Weight in Kgs.",
						"type": "String"
					},
					{
						"name": "Date of Joining",
						"type": "String"
					},
					{
						"name": "Quarter of Joining",
						"type": "String"
					},
					{
						"name": "Half of Joining",
						"type": "String"
					},
					{
						"name": "Year of Joining",
						"type": "String"
					},
					{
						"name": "Month of Joining",
						"type": "String"
					},
					{
						"name": "Month Name of Joining",
						"type": "String"
					},
					{
						"name": "Short Month",
						"type": "String"
					},
					{
						"name": "Day of Joining",
						"type": "String"
					},
					{
						"name": "DOW of Joining",
						"type": "String"
					},
					{
						"name": "Short DOW",
						"type": "String"
					},
					{
						"name": "Age in Company (Years)",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Last % Hike",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "Phone No. ",
						"type": "String"
					},
					{
						"name": "Place Name",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "User Name",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSqlDatabase1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\tRottenTomato as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'mycontainer',\n\tfolderPath: 'moviesdelta') ~> source1\nsource1 filter(year != 2021) ~> Filter1\nFilter1 aggregate(rowcount = count(1)) ~> Aggregate1\nAggregate1 sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\tsaveOrder: 1) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableLoans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "member_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "loan_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "funded_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "funded_amnt_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "term",
						"type": "nvarchar"
					},
					{
						"name": "int_rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "installment",
						"type": "float",
						"precision": 15
					},
					{
						"name": "grade",
						"type": "nvarchar"
					},
					{
						"name": "sub_grade",
						"type": "nvarchar"
					},
					{
						"name": "emp_title",
						"type": "nvarchar"
					},
					{
						"name": "emp_length",
						"type": "nvarchar"
					},
					{
						"name": "home_ownership",
						"type": "nvarchar"
					},
					{
						"name": "annual_inc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "verification_status",
						"type": "nvarchar"
					},
					{
						"name": "issue_d",
						"type": "nvarchar"
					},
					{
						"name": "loan_status",
						"type": "nvarchar"
					},
					{
						"name": "pymnt_plan",
						"type": "bit"
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "desc",
						"type": "nvarchar"
					},
					{
						"name": "purpose",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "zip_code",
						"type": "nvarchar"
					},
					{
						"name": "addr_state",
						"type": "nvarchar"
					},
					{
						"name": "dti",
						"type": "float",
						"precision": 15
					},
					{
						"name": "delinq_2yrs",
						"type": "float",
						"precision": 15
					},
					{
						"name": "earliest_cr_line",
						"type": "nvarchar"
					},
					{
						"name": "inq_last_6mths",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_delinq",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_record",
						"type": "float",
						"precision": 15
					},
					{
						"name": "open_acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "pub_rec",
						"type": "float",
						"precision": 15
					},
					{
						"name": "revol_bal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "revol_util",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "initial_list_status",
						"type": "bit"
					},
					{
						"name": "out_prncp",
						"type": "float",
						"precision": 15
					},
					{
						"name": "out_prncp_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_pymnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_pymnt_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_prncp",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_int",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_late_fee",
						"type": "float",
						"precision": 15
					},
					{
						"name": "recoveries",
						"type": "float",
						"precision": 15
					},
					{
						"name": "collection_recovery_fee",
						"type": "float",
						"precision": 15
					},
					{
						"name": "last_pymnt_d",
						"type": "nvarchar"
					},
					{
						"name": "last_pymnt_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "next_pymnt_d",
						"type": "nvarchar"
					},
					{
						"name": "last_credit_pull_d",
						"type": "nvarchar"
					},
					{
						"name": "collections_12_mths_ex_med",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_major_derog",
						"type": "nvarchar"
					},
					{
						"name": "policy_code",
						"type": "float",
						"precision": 15
					},
					{
						"name": "application_type",
						"type": "nvarchar"
					},
					{
						"name": "annual_inc_joint",
						"type": "nvarchar"
					},
					{
						"name": "dti_joint",
						"type": "nvarchar"
					},
					{
						"name": "verification_status_joint",
						"type": "nvarchar"
					},
					{
						"name": "acc_now_delinq",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tot_coll_amt",
						"type": "nvarchar"
					},
					{
						"name": "tot_cur_bal",
						"type": "nvarchar"
					},
					{
						"name": "open_acc_6m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_6m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_12m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_24m",
						"type": "nvarchar"
					},
					{
						"name": "mths_since_rcnt_il",
						"type": "nvarchar"
					},
					{
						"name": "total_bal_il",
						"type": "nvarchar"
					},
					{
						"name": "il_util",
						"type": "nvarchar"
					},
					{
						"name": "open_rv_12m",
						"type": "nvarchar"
					},
					{
						"name": "open_rv_24m",
						"type": "nvarchar"
					},
					{
						"name": "max_bal_bc",
						"type": "nvarchar"
					},
					{
						"name": "all_util",
						"type": "nvarchar"
					},
					{
						"name": "total_rev_hi_lim",
						"type": "nvarchar"
					},
					{
						"name": "inq_fi",
						"type": "nvarchar"
					},
					{
						"name": "total_cu_tl",
						"type": "nvarchar"
					},
					{
						"name": "inq_last_12m",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "loans"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableLoansNews')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "member_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "loan_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "funded_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "funded_amnt_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "term",
						"type": "nvarchar"
					},
					{
						"name": "int_rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "installment",
						"type": "float",
						"precision": 15
					},
					{
						"name": "grade",
						"type": "nvarchar"
					},
					{
						"name": "sub_grade",
						"type": "nvarchar"
					},
					{
						"name": "emp_title",
						"type": "nvarchar"
					},
					{
						"name": "emp_length",
						"type": "nvarchar"
					},
					{
						"name": "home_ownership",
						"type": "nvarchar"
					},
					{
						"name": "annual_inc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "verification_status",
						"type": "nvarchar"
					},
					{
						"name": "issue_d",
						"type": "nvarchar"
					},
					{
						"name": "loan_status",
						"type": "nvarchar"
					},
					{
						"name": "pymnt_plan",
						"type": "bit"
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "desc",
						"type": "nvarchar"
					},
					{
						"name": "purpose",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "zip_code",
						"type": "nvarchar"
					},
					{
						"name": "addr_state",
						"type": "nvarchar"
					},
					{
						"name": "dti",
						"type": "float",
						"precision": 15
					},
					{
						"name": "delinq_2yrs",
						"type": "float",
						"precision": 15
					},
					{
						"name": "earliest_cr_line",
						"type": "nvarchar"
					},
					{
						"name": "inq_last_6mths",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_delinq",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_record",
						"type": "float",
						"precision": 15
					},
					{
						"name": "open_acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "pub_rec",
						"type": "float",
						"precision": 15
					},
					{
						"name": "revol_bal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "revol_util",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "initial_list_status",
						"type": "bit"
					},
					{
						"name": "out_prncp",
						"type": "float",
						"precision": 15
					},
					{
						"name": "out_prncp_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_pymnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_pymnt_inv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_prncp",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_int",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_rec_late_fee",
						"type": "float",
						"precision": 15
					},
					{
						"name": "recoveries",
						"type": "float",
						"precision": 15
					},
					{
						"name": "collection_recovery_fee",
						"type": "float",
						"precision": 15
					},
					{
						"name": "last_pymnt_d",
						"type": "nvarchar"
					},
					{
						"name": "last_pymnt_amnt",
						"type": "float",
						"precision": 15
					},
					{
						"name": "next_pymnt_d",
						"type": "nvarchar"
					},
					{
						"name": "last_credit_pull_d",
						"type": "nvarchar"
					},
					{
						"name": "collections_12_mths_ex_med",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mths_since_last_major_derog",
						"type": "nvarchar"
					},
					{
						"name": "policy_code",
						"type": "float",
						"precision": 15
					},
					{
						"name": "application_type",
						"type": "nvarchar"
					},
					{
						"name": "annual_inc_joint",
						"type": "nvarchar"
					},
					{
						"name": "dti_joint",
						"type": "nvarchar"
					},
					{
						"name": "verification_status_joint",
						"type": "nvarchar"
					},
					{
						"name": "acc_now_delinq",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tot_coll_amt",
						"type": "nvarchar"
					},
					{
						"name": "tot_cur_bal",
						"type": "nvarchar"
					},
					{
						"name": "open_acc_6m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_6m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_12m",
						"type": "nvarchar"
					},
					{
						"name": "open_il_24m",
						"type": "nvarchar"
					},
					{
						"name": "mths_since_rcnt_il",
						"type": "nvarchar"
					},
					{
						"name": "total_bal_il",
						"type": "nvarchar"
					},
					{
						"name": "il_util",
						"type": "nvarchar"
					},
					{
						"name": "open_rv_12m",
						"type": "nvarchar"
					},
					{
						"name": "open_rv_24m",
						"type": "nvarchar"
					},
					{
						"name": "max_bal_bc",
						"type": "nvarchar"
					},
					{
						"name": "all_util",
						"type": "nvarchar"
					},
					{
						"name": "total_rev_hi_lim",
						"type": "nvarchar"
					},
					{
						"name": "inq_fi",
						"type": "nvarchar"
					},
					{
						"name": "total_cu_tl",
						"type": "nvarchar"
					},
					{
						"name": "inq_last_12m",
						"type": "nvarchar"
					},
					{
						"name": "skid",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "loansnew"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "loans"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "surrogatekey",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "EmpFunction",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Role",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "date"
					},
					{
						"name": "EndDate",
						"type": "date"
					},
					{
						"name": "iscurrent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "processtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[DimEmp]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDimension')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tTransactionId as string,\n\t\tSalesChannelId as string,\n\t\tPurchasingChannelId as string,\n\t\tTransactionInitiatedTimestamp as string,\n\t\tTransactionCompletedTimestamp as string,\n\t\tTransactionAmount as string,\n\t\tTotalRetailPriceAmount as string,\n\t\tTotalAdjustmentAmount as string,\n\t\tCustomerId as string,\n\t\tCustomerAccountId as string,\n\t\tTransactionTypeId as string,\n\t\tMerchantId as string,\n\t\tIsoCurrencyCode as string,\n\t\tLoyaltyProgramId as string,\n\t\tLoyaltyAccountId as string,\n\t\tStoreId as string,\n\t\tPaymentCardId as string,\n\t\tPointOfSaleId as string,\n\t\tTransactionClassificationId as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tentity: 'Transaction',\n\tformat: 'cdm',\n\tmanifestType: 'manifest',\n\tmanifestName: 'Transaction.cdm.json',\n\tentityPath: 'Transaction',\n\tlocal: true,\n\tfolderPath: 'CDMfolders',\n\tfileSystem: 'mycontainer') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/folderout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "moviesCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\tRottenTomato as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nFilter1 derive(Rating = iif(year==1988,1,toInteger(Rating)),\n\t\tyear = iif(year==1960,2021,toInteger(year))) ~> DerivedColumn1\nDerivedColumn1 alterRow(updateIf(year==1988),\n\tinsertIf(year==1960),\n\tdeleteIf(year==1950)) ~> AlterRow1\nsource1 filter(year == 1988 || year == 1960 || year == 1950) ~> Filter1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'mycontainer',\n\tfolderPath: 'moviesdelta',\n\ttruncate: false,\n\tmergeSchema: false,\n\tvacuum: 0,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['movie','year'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieAnalytics')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "moviesCSV",
								"type": "DatasetReference"
							},
							"name": "MoviesCSVSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"name": "sink1AvgRatingByYear"
						},
						{
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"name": "sink2MinMaxRating"
						},
						{
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"name": "sink3Favorites"
						}
					],
					"transformations": [
						{
							"name": "AvgComedyRatingByYear"
						},
						{
							"name": "minMaxRatingByYear"
						},
						{
							"name": "Favorite"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\tRottenTomato as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MoviesCSVSource\nMoviesCSVSource aggregate(groupBy(year),\n\tavgRatingForComedies = round(avgIf(instr(lower(genres),'comedy')>0,Rating),2)) ~> AvgComedyRatingByYear\nMoviesCSVSource aggregate(groupBy(year),\n\tminRating = min(Rating),\n\t\tmaxRating = max(Rating)) ~> minMaxRatingByYear\nFilter1 derive(Favorite = true()) ~> Favorite\nMoviesCSVSource filter(year == 1980) ~> Filter1\nAvgComedyRatingByYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1AvgRatingByYear\nminMaxRatingByYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2MinMaxRating\nFavorite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3Favorites"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesCSV')]",
				"[concat(variables('factoryId'), '/datasets/folderout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerQuery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "moviesCSV",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> moviesCSV",
							"dataset": {
								"referenceName": "moviesCSV",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['mymovies.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared moviesCSV = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://makadf001.blob.core.windows.net/mycontainer/SampleData/moviesDB.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = moviesCSV,\r\n  #\"Sorted rows\" = Table.Sort(Source, {{\"year\", Order.Descending}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Sorted rows\", {{\"title\", \"title\"}})\r\nin\r\n  #\"Renamed columns\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesCSV')]",
				"[concat(variables('factoryId'), '/datasets/folderout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerQuery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "moviesCSV",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> moviesCSV",
							"dataset": {
								"referenceName": "moviesCSV",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [],
					"script": "section Section1;\r\nshared moviesCSV = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://makadf001.blob.core.windows.net/mycontainer/SampleData/moviesDB.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = moviesCSV\r\nin\r\n  Source;\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesCSV')]"
			]
		}
	]
}