{
	"name": "hierachical",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tdocType as string,\n\t\tpageRange as string[],\n\t\tfields as ({Court Date} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Color} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Birthday as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Evidence of Financial} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Owner Street} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Height as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Area as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Perm Area} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Dec Date} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Court Location} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Time of Violation} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Make} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Owner Address} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Violation 1} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Beat as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Eyes as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Race as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Citing Officer} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Court Phone & Web} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Case Number} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Body Style} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Violation 2} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Hair as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Driver License} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Date of Violation} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Sex as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Age as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Excuted at} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Registered Owner or Lessee} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), street as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Day of week of Violation} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Type} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Model} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Max Speed} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Weight as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Speed Approx} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Patrol Vehicle No} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Citing Officer ID No} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Location of Violation} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Year} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), Name as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Court Time} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), address as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double), {Vehicle Lic or Vin} as (type as string, valueString as string, text as string, page as string, boundingBox as double[], confidence as double))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource1 derive(column1 = byItem( byItem( byName('customer'), 'orderItems'), 'itemName') ) ~> DerivedColumn1\nDerivedColumn1 sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\tsaveOrder: 1) ~> sink1"
		}
	}
}